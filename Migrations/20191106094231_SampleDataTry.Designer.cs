// <auto-generated />
using System;
using DABAS2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment2_EFcore_au529152.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20191106094231_SampleDataTry")]
    partial class SampleDataTry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DABAS2.Models.Dish", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("price");

                    b.Property<int>("reviewId");

                    b.HasKey("id");

                    b.HasIndex("reviewId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("DABAS2.Models.DishType", b =>
                {
                    b.Property<int>("dishTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("dishId");

                    b.Property<string>("type");

                    b.HasKey("dishTypeId");

                    b.HasIndex("dishId");

                    b.ToTable("DishType");
                });

            modelBuilder.Entity("DABAS2.Models.Guest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Time");

                    b.Property<int>("reviewId");

                    b.Property<int>("tableNumber");

                    b.HasKey("id");

                    b.HasIndex("reviewId");

                    b.HasIndex("tableNumber");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("DABAS2.Models.GuestDish", b =>
                {
                    b.Property<int>("guestDishId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("dishId");

                    b.Property<int>("guestId");

                    b.HasKey("guestDishId");

                    b.HasIndex("dishId");

                    b.HasIndex("guestId");

                    b.ToTable("GuestDish");
                });

            modelBuilder.Entity("DABAS2.Models.MyTable", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("resturantAddress");

                    b.HasKey("Number");

                    b.HasIndex("resturantAddress");

                    b.ToTable("MyTable");
                });

            modelBuilder.Entity("DABAS2.Models.Person", b =>
                {
                    b.Property<int>("id");

                    b.Property<string>("Name");

                    b.Property<int?>("waiterid");

                    b.HasKey("id");

                    b.HasIndex("waiterid")
                        .IsUnique()
                        .HasFilter("[waiterid] IS NOT NULL");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("DABAS2.Models.Resturant", b =>
                {
                    b.Property<string>("address")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("address");

                    b.ToTable("Resturant");
                });

            modelBuilder.Entity("DABAS2.Models.ResturantDish", b =>
                {
                    b.Property<int>("ResturantDishId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DishId");

                    b.Property<string>("ResturantAddress");

                    b.HasKey("ResturantDishId");

                    b.HasIndex("DishId");

                    b.HasIndex("ResturantAddress");

                    b.ToTable("ResturantDish");
                });

            modelBuilder.Entity("DABAS2.Models.ResturantType", b =>
                {
                    b.Property<int>("resturantTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("resturantAdress");

                    b.Property<string>("type");

                    b.HasKey("resturantTypeId");

                    b.HasIndex("resturantAdress");

                    b.ToTable("ResturantType");
                });

            modelBuilder.Entity("DABAS2.Models.Review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("resturantAddress");

                    b.Property<int>("stars");

                    b.Property<string>("text");

                    b.HasKey("id");

                    b.HasIndex("resturantAddress");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("DABAS2.Models.Waiter", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("salary");

                    b.HasKey("id");

                    b.ToTable("Waiter");
                });

            modelBuilder.Entity("DABAS2.Models.WaiterTable", b =>
                {
                    b.Property<int>("waiterTableId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("tableNumber");

                    b.Property<int>("waiterId");

                    b.HasKey("waiterTableId");

                    b.HasIndex("tableNumber");

                    b.HasIndex("waiterId");

                    b.ToTable("WaiterTable");
                });

            modelBuilder.Entity("DABAS2.Models.Dish", b =>
                {
                    b.HasOne("DABAS2.Models.Review", "Review")
                        .WithMany("Dish")
                        .HasForeignKey("reviewId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DABAS2.Models.DishType", b =>
                {
                    b.HasOne("DABAS2.Models.Dish", "Dish")
                        .WithMany("DishType")
                        .HasForeignKey("dishId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DABAS2.Models.Guest", b =>
                {
                    b.HasOne("DABAS2.Models.Review", "Review")
                        .WithMany("Guest")
                        .HasForeignKey("reviewId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DABAS2.Models.MyTable", "myTable")
                        .WithMany("Guest")
                        .HasForeignKey("tableNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DABAS2.Models.GuestDish", b =>
                {
                    b.HasOne("DABAS2.Models.Dish", "Dish")
                        .WithMany("GuestDish")
                        .HasForeignKey("dishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DABAS2.Models.Guest", "Guest")
                        .WithMany("GuestDish")
                        .HasForeignKey("guestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DABAS2.Models.MyTable", b =>
                {
                    b.HasOne("DABAS2.Models.Resturant", "Resturant")
                        .WithMany("myTable")
                        .HasForeignKey("resturantAddress")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DABAS2.Models.Person", b =>
                {
                    b.HasOne("DABAS2.Models.Guest", "guest")
                        .WithOne("person")
                        .HasForeignKey("DABAS2.Models.Person", "id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DABAS2.Models.Waiter", "waiter")
                        .WithOne("person")
                        .HasForeignKey("DABAS2.Models.Person", "waiterid");
                });

            modelBuilder.Entity("DABAS2.Models.ResturantDish", b =>
                {
                    b.HasOne("DABAS2.Models.Dish", "Dish")
                        .WithMany("ResturantDish")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DABAS2.Models.Resturant", "Resturant")
                        .WithMany("ResturantDish")
                        .HasForeignKey("ResturantAddress")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DABAS2.Models.ResturantType", b =>
                {
                    b.HasOne("DABAS2.Models.Resturant", "Resturant")
                        .WithMany("ResturantType")
                        .HasForeignKey("resturantAdress")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DABAS2.Models.Review", b =>
                {
                    b.HasOne("DABAS2.Models.Resturant", "Resturant")
                        .WithMany("Review")
                        .HasForeignKey("resturantAddress")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DABAS2.Models.WaiterTable", b =>
                {
                    b.HasOne("DABAS2.Models.MyTable", "myTable")
                        .WithMany("WaiterTable")
                        .HasForeignKey("tableNumber")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DABAS2.Models.Waiter", "waiter")
                        .WithMany("WaiterTable")
                        .HasForeignKey("waiterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
